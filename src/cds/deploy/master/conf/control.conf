#!/bin/bash
#
# **标记两个星号的为不同模块需要修改的部分

#这部分不需要改动
#--------------------------------------------------------------
#return value##################################################
OK="0"
ERROR="1"
#--------------------------------------------------------------
#这部分根据程序的需要设置
#--------------------------------------------------------------
# **max time of checking *.log, (not log.wf)###################
LOG_CHK_TME="45"
# **max time of healthcheck ###################################
MAX_HEC_TME="4800"
# **kill and wait this seconds, then check#####################
# **do 100 round, every round wait this seconds################
MAX_WAT_TME="10"
# **健康性检查时候的最小线程数
TRD_NUM="8"
#--------------------------------------------------------------

#设置模块的部署路径
#--------------------------------------------------------------
##-->0516 update:	HW="/home/work/"
CONTROL_LOG="control.log"
# **设置服务名，主程序，配置，日志
PROC_MODULE="master"
PROC_NAME="master"
PROC_RELOAD_NAME="noderload"
PROC_CONF="master.conf"
#设置模块的详细部署路径，一般不需要修改
LIMIT="/bin/limit"
##-->0516 updE="$HW/psop/supervise/bin/supervise"
##-->0516 update:  强行指定supervise默认路径, 所有产品线的supervise均部署在这个地方

SUPERVISE="../sup.ebs.master"

##-->0516 update:  TOP_PATH="$HW/$TOP"
DIR_NAME="$PWD"
TOP_PATH="${DIR_NAME%/*}"
CNF_DIR="${TOP_PATH}/conf/"		#/home/work/search/as/conf/
BIN_DIR="${TOP_PATH}/bin/"		#/home/work/search/as/bin/
STA_DIR="${TOP_PATH}/status/"	#/home/work/search/as/status/
LOG_DIR="${TOP_PATH}/log/" 
#--------------------------------------------------------------

#纪录process id
PID_RECORD=${BIN_DIR}/${PROC_NAME}.pid

# **设置启动命令
mac=`uname -m`
if [[ "$mac" == "armv7l" ]]
then
    START_COMMAND="${BIN_DIR}/${SUPERVISE} -p ${STA_DIR}/${PROC_NAME} -f ${BIN_DIR}/${PROC_NAME}"
else
    START_COMMAND="ulimit -c unlimited;nohup limit -n 1000000 ${BIN_DIR}/${PROC_NAME}"
fi
# if  ${PROC_CONF_SVR}"
#supervise -u ${STA_DIR} 指定STA_DIR为supervise的状态目录, 目录要事先创建
#nohup直到后面的命令为启动命令, 注意后面不要加 "2>/dev/null &" 类似内容, 因为输出已经重定向到CONTROL_LOG了
#停止命令默认为kill_proc ${PROC_NAME}，一般不需要修改
STOP_COMMAND="kill_proc ${PROC_NAME}"
#注意：kill_proc中均使用killall -9方式杀掉进程

# **配置healthcheck需要检查的条目：1为检查，0为不检查
#检查进程是否存在
CHK_PROC_EXIST=1
#检查进程的个数是否>=$TRD_NUM
CHK_PROC_NUM=1
#检查$LOG_CHK_TME时间内，$PROC_LOG有没有滚动
CHK_LOG_ROLL=1
#检查进程启动后，日志中是否出现$LOG_KEY_WORD中指定的关键字
CHK_LOG_KEY_WORD=1
LOG_KEY_WORD="master start success"
